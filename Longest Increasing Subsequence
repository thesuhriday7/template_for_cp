//Longest Strictly Increasing Subsequence
int bs(vector<int>&v,int target){
        int s=0,en=v.size()-1,ans=-1;
        while(s<=en){
            int mid=s+(en-s)/2;
            if(v[mid]>=target){
                ans=mid;
                en=mid-1;
            }
            else{
                s=mid+1;
            }
        }
        return ans;
    }
    int LIS(vector<int>& nums) {
        vector<int>arr;
        for(int i=0;i<nums.size();i++){
            if(arr.size()==0){
                arr.push_back(nums[i]);
            }
            else{
                if(arr[arr.size()-1]<nums[i]){
                    arr.push_back(nums[i]);
                }
                else{
                    int in=bs(arr,nums[i]);
                    arr[in]=nums[i];
                }
            }
        }
        return arr.size();
    }
//T.C-O(nlogn)
//S.C-O(n)
